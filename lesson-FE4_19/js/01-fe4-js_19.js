console.log(
    '%c 1.Асинхронні функції. ',
    'color: white; background-color: #D33F49',
);

//! Асинхронні функції
console.warn("КРОК-1.Підтвердження прав доступу до сторінки:");
//? ✳️ Робота з бекендом може бути заплутаною 
//? - після однієї асинхронної операції необхідно 
//? зробити ще один запит на сервер на підставі 
//? отриманих даних, і так кілька разів. 
//? Наприклад, на сторінці профілю користувач 
//? хоче подивитися список друзів. 
//? Перше, що необхідно зробити 
//? - підтвердити його права доступу до цієї сторінки на бекенді. 
//? Для цього потрібно зробити запит до my-api.com/me. 
//? Якщо бекенд дозволить доступ, у відповіді 
//? ми отримаємо унікальний токен доступу до захищених ресурсів.
console.log(
    `%c
    const fetchFriends = () => {
        return fetch("my-api.com/me").then(token => {
            console.log(token);
        });
    };
    `,
    'color: blue; font-size: 18px',
);

console.warn("КРОК-2.Запит профілю користувача:");
//? ✳️ Потім необхідно зробити запит профілю користувача
//? з my-api.com/profile, але профіль - неповний,
//? він містить тільки критично важливу інформацію:
//? ідентифікатор користувача без списку друзів.
let token = "${token}"; //! для вірного відображення в console.log()
console.log(
    `%c
    const fetchFriends = () => {
        return fetch("my-api.com/me")
            .then(token => {
                return fetch('my-api.com/profile?token=${token}');
        })
        .then(user => {
            console.log(user.id);
        });
    };
    `,
    'color: blue; font-size: 18px',
);





//? ✴️
//? ✳️ 

//?     📌 ---:
//? 🔸 ООО.
//? 🔸 ООО.
//? 🔸 ООО.


console.log(
    `%c
    <
        ......
    />
    `,
    'color: blue; font-size: 18px',
);

console.log("-------------------------------------------------------------------");
