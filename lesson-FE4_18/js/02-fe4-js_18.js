console.log(
  '%c 2.Meтод GET. Операція READ. Читання. ',
  'color: white; background-color: #D33F49',
);

//! Meтод GET. Операція READ. Читання
//? ✴️ HTTP-метод GET використовується для отримання існуючих даних.
//? Метод fetch() повинен відправити на сервер GET-запит без тіла.
//? Бекенд, після отримання запиту, обробить його
//? і у відповіді поверне необхідні ресурси.


//? ✳️ Отримаємо масив усіх постів. 
//? З цією метою, звертаємося до ресурсу /posts, 
//? описаного в документації бекенду. 
//? Метод fetch() за замовчуванням робить GET-запит, 
//? тому необов'язково перевизначати опції запиту.
fetch("https://jsonplaceholder.typicode.com/posts")
  .then(response => response.json())
  .then(posts => console.log("posts:", posts))
  .catch(error => console.log(error))
  .finally(() => console.log(". . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . "));


//? ✳️ Отримаємо один пост за ідентифікатором (властивість id),
//? додавши його до ресурсу /posts/:postId.
//? Остання частина цього шляху називається динамічний параметр
//? і в документації описується як /ресурс/:параметр.
//? Ресурс не змінюється - це шлях до цілої колекції,
//? а значення параметра змінюється для кожного її елемента.
//! Змініть це число, щоб отримати різні публікації.
const postId = 1;

setTimeout(() => {
  fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`)
    .then(response => response.json())
    .then(post => console.log("post:", post))
    .catch(error => console.log(error))
    .finally(() => console.log("-----------------------------------------------------------------------------------------------------"));
}, 100);
// console.log("-----------------------------------------------------------------------------------------------------"));
