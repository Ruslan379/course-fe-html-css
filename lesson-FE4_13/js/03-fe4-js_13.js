console.log(
    '%c 3.–ú–µ—Ç–æ–¥ then(). ',
    'color: white; background-color: #D33F49',
);

//! –ú–µ—Ç–æ–¥ then()
console.warn("–ú–µ—Ç–æ–¥ then():");
console.warn(`–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è‚Äã‚Äã: \n ${((window.location.href).split('/')).slice(0, -2).join('/') + '/'}${"lesson-FE4_04/images/image-1.png"}`);
console.warn("–ü–æ—Å–∏–ª–∞–Ω–Ω—è: \n https://caniuse.com/?search=loading%3D%22lazy%22");

//? ‚ú¥Ô∏è
//? ‚ú≥Ô∏è 

console.log(
    `%c
    const promise = new Promise((resolve, reject) => {
      // Asynchronous operation
    });

    promise.then(onResolve, onReject);
    `,
    'color: blue; font-size: 18px',
);
//?     üìå:
//? üî∏ onResolve(value) - –±—É–¥–µ –≤–∏–∫–ª–∏–∫–∞–Ω–∞ —É —Ä–∞–∑—ñ —É—Å–ø—ñ—à–Ω–æ–≥–æ
//?    –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –ø—Ä–æ–º—ñ—Å—É —ñ –æ—Ç—Ä–∏–º–∞—î –π–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç.
//? üî∏ onReject(error) - –±—É–¥–µ –≤–∏–∫–ª–∏–∫–∞–Ω–∞ —É —Ä–∞–∑—ñ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è 
//?    –ø—Ä–æ–º—ñ—Å—É –∑ –ø–æ–º–∏–ª–∫–æ—é —ñ –æ—Ç—Ä–∏–º–∞—î —ó—ó —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç.




console.log("-----------------------------------------------------------------------------------");
