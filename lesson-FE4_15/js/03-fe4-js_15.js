console.log(
    '%c 3.HTTP-методи.    \n   HTTP-заголовки. \n   Шляхи.          ',
    'color: white; background-color: #D33F49',
);

//! HTTP-методи
//? ✴️ Виділяють кілька основних HTTP-методів
//? для роботи з REST-сервісом:
console.warn(`HTTP-методи: \n ${((window.location.href).split('/')).slice(0, -2).join('/') + '/'}${"lesson-FE4_15/images/http-methods.png"}`);
console.log("----------------------------------------------------------------------");


//! HTTP-заголовки
console.warn("HTTP-заголовки:");
//? ✴️ Заголовки містять службову інформацію, 
//? що стосується контенту запиту. Наприклад, 
//? тип контенту, який клієнт може обробити 
//? у відповіді від сервера (заголовок Accept) або, 
//? який описує тип ресурсу, який клієнт відправляє 
//? серверу або сервер відправляє 
//? клієнту (заголовок Content-Type).
console.log(
    `%c
    Accept: text/html
    Content-Type: application/json
    `,
    'color: blue; font-size: 18px',
);
//? ✳️ MIME-типи - варіанти типів контенту. 
//? Використовуються для зазначення вмісту запиту 
//? і відповіді, складаються з типу і підтипу, 
//? які розділені скісною рискою /. 
//? Наприклад, текстовий файл, що містить HTML, 
//? буде описаний типом text/html. 
//? Якщо файл містить CSS, він буде описаний як text/css. 
//? Дані у форматі JSON будуть описані як application/json. 
//? Якщо клієнт очікує text/css, а отримує application/json, 
//? він не зможе розпізнати і обробити контент відповіді.
console.log("----------------------------------------------------------------------");


//! Шляхи
console.warn("Шляхи:");
//? ✴️ Запити повинні містити шлях до ресурсу,
//? над яким виконується операція.
//? Доступні шляхи (ендпоінти, ресурси)
//? описуються в документації бекенду.

//? ✳️ Такий шлях явно вказує на ресурс, 
//? навіть якщо ви його ніколи раніше не бачили, 
//? тому що він є ієрархічним і описовим. 
//? Ми виконуємо запит для отримання колекції замовлень.
console.log(
    `%c
    GET <https://bookstore.com/api/orders>
    Accept: application/json
    `,
    'color: blue; font-size: 18px',
);
console.log(". . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .");

//? ✳️ Для того щоб отримати один елемент колекції,
//? його ідентифікатор додається до ресурсу.
//? Розглянемо запит на читання одного замовлення
//? з ідентифікатором 289:
console.log(
    `%c
    GET <https://bookstore.com/api/orders/289>
    Accept: application/json
    `,
    'color: blue; font-size: 18px',
);
//? ✳️ Остання частина шляху називається динамічний параметр 
//? і в документації описується як /ресурс/:параметр. 
//? Ресурс не змінюється, це шлях до цілої колекції, 
//? а значення параметра змінюється для кожного її елемента.
console.log("----------------------------------------------------------------------");
