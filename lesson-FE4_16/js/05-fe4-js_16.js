console.log(
    '%c 5.–†–æ–±–æ—Ç–∞ –∑ –ø—É–±–ª—ñ—á–Ω–∏–º REST API. ',
    'color: white; background-color: #D33F49',
);

//! –†–æ–±–æ—Ç–∞ –∑ –ø—É–±–ª—ñ—á–Ω–∏–º REST API.
//? ‚ú¥Ô∏è –ö–æ–∂–µ–Ω –±–µ–∫–µ–Ω–¥ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π, —ó—Ö —Ç–∏—Å—è—á—ñ.
//? –ó —ñ–Ω—à–æ–≥–æ –±–æ–∫—É REST API –ø–æ–±—É–¥–æ–≤–∞–Ω—ñ
//? –∑–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ—é –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–æ—é.
//? –¶–µ –æ–∑–Ω–∞—á–∞—î, —â–æ –º–æ–∂–Ω–∞ –∑—Ä–æ–∑—É–º—ñ—Ç–∏ –ø—Ä–∏–Ω—Ü–∏–ø —ó—Ö —Ä–æ–±–æ—Ç–∏,
//? –ø—ñ—Å–ª—è —á–æ–≥–æ, –≤—Å–µ —â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑—Ä–æ–±–∏—Ç–∏
//? - —Ü–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—è –∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—î—é —Ç–æ–≥–æ –±–µ–∫–µ–Ω–¥—É,
//? —è–∫–∏–π –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏.
//? ‚ú≥Ô∏è –ü—Ä–æ–¥–æ–≤–∂–∏–º–æ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ API https://jsonplaceholder.typicode.com.
//? –ó –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó –±–µ—Ä–µ–º–æ URL —Ä–µ—Å—É—Ä—Å—É –¥–ª—è –∑–∞–ø–∏—Ç—É 
//? —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –∫–æ–ª–µ–∫—Ü—ñ—ó –Ω–µ—Å–ø—Ä–∞–≤–∂–Ω—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤.
console.log(
    `%c
    https://jsonplaceholder.typicode.com/users
    `,
    'color: blue; font-size: 18px',
);
//?     üìå –¶–µ–π —à–ª—è—Ö —Å–∫–ª–∞–¥–∞—î—Ç—å—Å—è –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö —á–∞—Å—Ç–∏–Ω::
//? üî∏ https://jsonplaceholder.typicode.com
//?    - —Ü–µ –µ–Ω–¥–ø–æ—ñ–Ω—Ç, –±–∞–∑–æ–≤–∏–π URL, —Ç–æ—á–∫–∞ –≤—Ö–æ–¥—É –≤ API.
//? üî∏ /users - —Ä–µ—Å—É—Ä—Å, –¥–æ —è–∫–æ–≥–æ –º–∏ –∑–≤–µ—Ä—Ç–∞—î–º–æ—Å—è.

//? ‚ú≥Ô∏è –ü–æ –∫–ª—ñ–∫—É –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´Fetch users¬ª 
//? –∑—Ä–æ–±–∏–º–æ GET-–∑–∞–ø–∏—Ç —ñ –≤–∏–≤–µ–¥–µ–º–æ 
//? —Å–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞ –æ—Ç—Ä–∏–º–∞–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏.
const fetchUsersBtn = document.querySelector(".btn");
const userList = document.querySelector(".user-list");

fetchUsersBtn.addEventListener("click", fetchUsers);

function fetchUsers() {
    fetchData()
        .then((users) => renderUsers(users))
        .catch((error) => console.log(error));
};

function fetchData() {
    return fetch("https://jsonplaceholder.typicode.com/users")
        .then((response) => {
            if (!response.ok) {
                throw new Error(response.status);
            };
            return response.json();
        })
};

function renderUsers(users) {
    const markup = users
        .map((user) => {
            return `
                <li>
                    <p><b>Name</b>: ${user.name}</p>
                    <p><b>Email</b>: ${user.email}</p>
                    <p><b>Company</b>: ${user.company.name}</p>
                </li>
            `;
        })
        .join("");
    userList.insertAdjacentHTML("beforeend", markup);
    console.log("markup:", markup);
    console.log("----------------------------------------------------------------------");
};
//? ‚ú≥Ô∏è –ó–≤–µ—Ä–Ω—ñ—Ç—å —É–≤–∞–≥—É –Ω–∞ —Ç–µ, —â–æ —Ñ—É–Ω–∫—Ü—ñ—è fetchData() 
//? –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–æ–º—ñ—Å, —Ç–æ–º—É –¥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É —ó—ó –≤–∏–∫–ª–∏–∫—É 
//? –º–∏ –¥–æ–¥–∞—î–º–æ –ª–∞–Ω—Ü—é–∂–æ–∫ –º–µ—Ç–æ–¥—ñ–≤ then() —ñ catch().
// console.log("----------------------------------------------------------------------");
