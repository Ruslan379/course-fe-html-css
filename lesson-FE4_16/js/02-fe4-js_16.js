console.log(
    '%c 2.Fetch API​ ',
    'color: white; background-color: #D33F49',
);

//! Fetch API​ 
//? ✴️ Інтерфейс, вбудований в браузер, доступний на об'єкті window,
//? який містить набір властивостей і методів для відправлення,
//? отримання та обробки ресурсів від сервера.
//? Метод fetch() надає сучасний інтерфейс для формування
//? запитів до сервера і побудований на промісах.
console.log(
    `%c
    fetch(url, options)
    `,
    'color: blue; font-size: 18px',
);
//? 🔸 url - шлях до даних на бекенді,
//?    які необхідно отримати,
//?    створити або змінити.
//?    Обов'язковий аргумент.
//? 🔸 options - об'єкт налаштувань запиту:
//?    метод (за замовчуванням GET),
//?    заголовки, тіло тощо.
//?    Необов'язковий аргумент.

//? ✳️ Для прикладу зробимо запити до https://jsonplaceholder.typicode.com
//? - публічного REST API для швидкого прототипування, 
//? який надає колекцію несправжніх користувачів в ресурсі /users.
console.log(
    `%c
    fetch("https://jsonplaceholder.typicode.com/users")
        .then(response => {
          // Response handling
        })
        .then(data => {
          // Data handling
        })
        .catch(error => {
          // Error handling
        });
    `,
    'color: blue; font-size: 18px',
);
console.log("------------------------------------------------------------------------------------");
